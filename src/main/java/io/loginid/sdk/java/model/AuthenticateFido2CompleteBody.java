/*
 * LoginID Service API
 * # Introduction  <span class=\"subtext\"> Welcome to the LoginID API docs. This documentation will help understand the API calls being made behind our SDKs.  These APIs can be used to manage authentication, users, and user credentials. </span>  # Authentication  <span class=\"subtext\"> There is one main form of authentication for the API: <br/>&bull; API Service Token </span> 
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.loginid.sdk.java.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * Fido2CompleteBody1
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-10T08:30:05.952Z[GMT]")
public class AuthenticateFido2CompleteBody {
  @SerializedName("client_id")
  private String clientId = null;

  @SerializedName("username")
  private String username = null;

  @SerializedName("assertion_payload")
  private AuthenticateCompletePayload assertionPayload = null;

  public AuthenticateFido2CompleteBody clientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/
  @Schema(example = "MjE4MDA4NTgtMmI0NS0xMWViLWFkYzEtMDI0MmFjMTIwMDAyLg==", description = "")
  public String getClientId() {
    return clientId;
  }

  public void setClientId(String clientId) {
    this.clientId = clientId;
  }

  public AuthenticateFido2CompleteBody username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @Schema(example = "john.doe", description = "")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public AuthenticateFido2CompleteBody assertionPayload(AuthenticateCompletePayload assertionPayload) {
    this.assertionPayload = assertionPayload;
    return this;
  }

   /**
   * Get assertionPayload
   * @return assertionPayload
  **/
  @Schema(description = "")
  public AuthenticateCompletePayload getAssertionPayload() {
    return assertionPayload;
  }

  public void setAssertionPayload(AuthenticateCompletePayload assertionPayload) {
    this.assertionPayload = assertionPayload;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthenticateFido2CompleteBody authenticateFido2CompleteBody = (AuthenticateFido2CompleteBody) o;
    return Objects.equals(this.clientId, authenticateFido2CompleteBody.clientId) &&
        Objects.equals(this.username, authenticateFido2CompleteBody.username) &&
        Objects.equals(this.assertionPayload, authenticateFido2CompleteBody.assertionPayload);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientId, username, assertionPayload);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Fido2CompleteBody1 {\n");

    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    assertionPayload: ").append(toIndentedString(assertionPayload)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

/*
 * LoginID Service API
 * # Introduction  <span class=\"subtext\"> Welcome to the LoginID API docs. This documentation will help understand the API calls being made behind our SDKs.  These APIs can be used to manage authentication, users, and user credentials. </span>  # Authentication  <span class=\"subtext\"> There is one main form of authentication for the API: <br/>&bull; API Service Token </span> 
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.loginid.sdk.java.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * InlineResponse2005
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-01-25T11:19:57.896818-05:00[America/Toronto]")
public class AuthenticatePublickeyInitResponse {
  @SerializedName("challenge_id")
  private String challengeId = null;

  @SerializedName("server_nonce")
  private String serverNonce = null;

  public AuthenticatePublickeyInitResponse challengeId(String challengeId) {
    this.challengeId = challengeId;
    return this;
  }

   /**
   * Get challengeId
   * @return challengeId
  **/
  @Schema(example = "[temporary unique id]", description = "")
  public String getChallengeId() {
    return challengeId;
  }

  public void setChallengeId(String challengeId) {
    this.challengeId = challengeId;
  }

  public AuthenticatePublickeyInitResponse serverNonce(String serverNonce) {
    this.serverNonce = serverNonce;
    return this;
  }

   /**
   * Get serverNonce
   * @return serverNonce
  **/
  @Schema(example = "[base64url-encoded server nonce]", description = "")
  public String getServerNonce() {
    return serverNonce;
  }

  public void setServerNonce(String serverNonce) {
    this.serverNonce = serverNonce;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthenticatePublickeyInitResponse inlineResponse2005 = (AuthenticatePublickeyInitResponse) o;
    return Objects.equals(this.challengeId, inlineResponse2005.challengeId) &&
        Objects.equals(this.serverNonce, inlineResponse2005.serverNonce);
  }

  @Override
  public int hashCode() {
    return Objects.hash(challengeId, serverNonce);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2005 {\n");
    
    sb.append("    challengeId: ").append(toIndentedString(challengeId)).append("\n");
    sb.append("    serverNonce: ").append(toIndentedString(serverNonce)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

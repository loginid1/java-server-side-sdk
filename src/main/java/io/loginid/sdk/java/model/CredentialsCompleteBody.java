/*
 * LoginID Service API
 * # Introduction  <span class=\"subtext\"> Welcome to the LoginID API docs. This documentation will help understand the API calls being made behind our SDKs.  These APIs can be used to manage authentication, users, and user credentials. </span>  # Authentication  <span class=\"subtext\"> There is one main form of authentication for the API: <br/>&bull; API Service Token </span> 
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.loginid.sdk.java.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * Fido2CompleteBody2
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-10T08:30:05.952Z[GMT]")
public class CredentialsCompleteBody {
  @SerializedName("client_id")
  private String clientId = null;

  @SerializedName("user_id")
  private String userId = null;

  @SerializedName("attestation_payload")
  private Credentialsfido2completeAttestationPayload attestationPayload = null;

  @SerializedName("options")
  private Registerfido2completeOptions options = null;

  public CredentialsCompleteBody clientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/
  @Schema(description = "")
  public String getClientId() {
    return clientId;
  }

  public void setClientId(String clientId) {
    this.clientId = clientId;
  }

  public CredentialsCompleteBody userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @Schema(description = "")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }

  public CredentialsCompleteBody attestationPayload(Credentialsfido2completeAttestationPayload attestationPayload) {
    this.attestationPayload = attestationPayload;
    return this;
  }

   /**
   * Get attestationPayload
   * @return attestationPayload
  **/
  @Schema(description = "")
  public Credentialsfido2completeAttestationPayload getAttestationPayload() {
    return attestationPayload;
  }

  public void setAttestationPayload(Credentialsfido2completeAttestationPayload attestationPayload) {
    this.attestationPayload = attestationPayload;
  }

  public CredentialsCompleteBody options(Registerfido2completeOptions options) {
    this.options = options;
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @Schema(description = "")
  public Registerfido2completeOptions getOptions() {
    return options;
  }

  public void setOptions(Registerfido2completeOptions options) {
    this.options = options;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CredentialsCompleteBody CredentialsCompleteBody = (CredentialsCompleteBody) o;
    return Objects.equals(this.clientId, CredentialsCompleteBody.clientId) &&
        Objects.equals(this.userId, CredentialsCompleteBody.userId) &&
        Objects.equals(this.attestationPayload, CredentialsCompleteBody.attestationPayload) &&
        Objects.equals(this.options, CredentialsCompleteBody.options);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientId, userId, attestationPayload, options);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Fido2CompleteBody2 {\n");

    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    attestationPayload: ").append(toIndentedString(attestationPayload)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

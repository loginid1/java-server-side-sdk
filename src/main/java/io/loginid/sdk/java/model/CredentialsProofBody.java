/*
 * LoginID Service API
 * # Introduction  <span class=\"subtext\"> Welcome to the LoginID API docs. This documentation will help understand the API calls being made behind our SDKs.  These APIs can be used to manage authentication, users, and user credentials. </span>  # Authentication  <span class=\"subtext\"> There is one main form of authentication for the API: <br/>&bull; API Service Token </span> 
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.loginid.sdk.java.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * CredentialsProofCompleteBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-01-25T11:19:57.896818-05:00[America/Toronto]")
public class CredentialsProofBody {
  @SerializedName("client_id")
  private String clientId = null;

  @SerializedName("username")
  private String username = null;

  @SerializedName("user_id")
  private String userId = null;

  @SerializedName("credential_uuid")
  private String credentialUuid = null;

  @SerializedName("activate_credential")
  private Boolean activateCredential = null;

  public CredentialsProofBody clientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/
  @Schema(required = true, description = "")
  public String getClientId() {
    return clientId;
  }

  public void setClientId(String clientId) {
    this.clientId = clientId;
  }

  public CredentialsProofBody username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @Schema(description = "")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public CredentialsProofBody userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @Schema(description = "")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }

  public CredentialsProofBody credentialUuid(String credentialUuid) {
    this.credentialUuid = credentialUuid;
    return this;
  }

   /**
   * Get credentialUuid
   * @return credentialUuid
  **/
  @Schema(description = "")
  public String getCredentialUuid() {
    return credentialUuid;
  }

  public void setCredentialUuid(String credentialUuid) {
    this.credentialUuid = credentialUuid;
  }

  public CredentialsProofBody activateCredential(Boolean activateCredential) {
    this.activateCredential = activateCredential;
    return this;
  }

   /**
   * Get activateCredential
   * @return activateCredential
  **/
  @Schema(description = "")
  public Boolean isActivateCredential() {
    return activateCredential;
  }

  public void setActivateCredential(Boolean activateCredential) {
    this.activateCredential = activateCredential;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CredentialsProofBody credentialsProofBody = (CredentialsProofBody) o;
    return Objects.equals(this.clientId, credentialsProofBody.clientId) &&
        Objects.equals(this.username, credentialsProofBody.username) &&
        Objects.equals(this.userId, credentialsProofBody.userId) &&
        Objects.equals(this.credentialUuid, credentialsProofBody.credentialUuid) &&
        Objects.equals(this.activateCredential, credentialsProofBody.activateCredential);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientId, username, userId, credentialUuid, activateCredential);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CredentialsProofBody {\n");
    
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    credentialUuid: ").append(toIndentedString(credentialUuid)).append("\n");
    sb.append("    activateCredential: ").append(toIndentedString(activateCredential)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

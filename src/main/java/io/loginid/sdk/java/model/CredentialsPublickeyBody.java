/*
 * LoginID Service API
 * # Introduction  <span class=\"subtext\"> Welcome to the LoginID API docs. This documentation will help understand the API calls being made behind our SDKs.  These APIs can be used to manage authentication, users, and user credentials. </span>  # Authentication  <span class=\"subtext\"> There is one main form of authentication for the API: <br/>&bull; API Service Token </span> 
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.loginid.sdk.java.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import io.loginid.sdk.java.model.CredentialsPublickeyOptions;

import java.util.Objects;

/**
 * CredentialsPublickeyBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-01-25T11:19:57.896818-05:00[America/Toronto]")
public class CredentialsPublickeyBody {
  @SerializedName("client_id")
  private String clientId = null;

  @SerializedName("username")
  private String username = null;

  @SerializedName("user_id")
  private String userId = null;

  @SerializedName("publickey_alg")
  private String publickeyAlg = "ES256";

  @SerializedName("publickey")
  private String publickey = null;

  @SerializedName("options")
  private CredentialsPublickeyOptions options = null;

  public CredentialsPublickeyBody clientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/
  @Schema(example = "[Client ID]", description = "")
  public String getClientId() {
    return clientId;
  }

  public void setClientId(String clientId) {
    this.clientId = clientId;
  }

  public CredentialsPublickeyBody username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @Schema(example = "[username]", description = "")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public CredentialsPublickeyBody userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @Schema(example = "[userID]", description = "")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }

  public CredentialsPublickeyBody publickeyAlg(String publickeyAlg) {
    this.publickeyAlg = publickeyAlg;
    return this;
  }

   /**
   * Get publickeyAlg
   * @return publickeyAlg
  **/
  @Schema(description = "")
  public String getPublickeyAlg() {
    return publickeyAlg;
  }

  public void setPublickeyAlg(String publickeyAlg) {
    this.publickeyAlg = publickeyAlg;
  }

  public CredentialsPublickeyBody publickey(String publickey) {
    this.publickey = publickey;
    return this;
  }

   /**
   * Get publickey
   * @return publickey
  **/
  @Schema(example = "[base64url-encoded public key]", description = "")
  public String getPublickey() {
    return publickey;
  }

  public void setPublickey(String publickey) {
    this.publickey = publickey;
  }

  public CredentialsPublickeyBody options(CredentialsPublickeyOptions options) {
    this.options = options;
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @Schema(description = "")
  public CredentialsPublickeyOptions getOptions() {
    return options;
  }

  public void setOptions(CredentialsPublickeyOptions options) {
    this.options = options;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CredentialsPublickeyBody credentialsPublickeyBody = (CredentialsPublickeyBody) o;
    return Objects.equals(this.clientId, credentialsPublickeyBody.clientId) &&
        Objects.equals(this.username, credentialsPublickeyBody.username) &&
        Objects.equals(this.userId, credentialsPublickeyBody.userId) &&
        Objects.equals(this.publickeyAlg, credentialsPublickeyBody.publickeyAlg) &&
        Objects.equals(this.publickey, credentialsPublickeyBody.publickey) &&
        Objects.equals(this.options, credentialsPublickeyBody.options);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientId, username, userId, publickeyAlg, publickey, options);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CredentialsPublickeyBody {\n");
    
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    publickeyAlg: ").append(toIndentedString(publickeyAlg)).append("\n");
    sb.append("    publickey: ").append(toIndentedString(publickey)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

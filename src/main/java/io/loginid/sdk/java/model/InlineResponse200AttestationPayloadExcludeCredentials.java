/*
 * LoginID Service API
 * # Introduction  <span class=\"subtext\"> Welcome to the LoginID API docs. This documentation will help understand the API calls being made behind our SDKs.  These APIs can be used to manage authentication, users, and user credentials. </span>  # Authentication  <span class=\"subtext\"> There is one main form of authentication for the API: <br/>&bull; API Service Token </span> 
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.loginid.sdk.java.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * InlineResponse200AttestationPayloadExcludeCredentials
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-22T12:29:40.679835-05:00[America/Toronto]")
public class InlineResponse200AttestationPayloadExcludeCredentials {
  @SerializedName("id")
  private String id = null;

  @SerializedName("type")
  private String type = null;

  /**
   * Gets or Sets transports
   */
  @JsonAdapter(TransportsEnum.Adapter.class)
  public enum TransportsEnum {
    USB("usb"),
    NFC("nfc"),
    BLE("ble"),
    INTERNAL("internal");

    private String value;

    TransportsEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TransportsEnum fromValue(String input) {
      for (TransportsEnum b : TransportsEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TransportsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TransportsEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public TransportsEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return TransportsEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("transports")
  private List<TransportsEnum> transports = null;

  public InlineResponse200AttestationPayloadExcludeCredentials id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(example = "QwyAKUcyNuSj8AD-Ynqi3lI958KpWsG-Y9YptZ9KFGLVidh", description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public InlineResponse200AttestationPayloadExcludeCredentials type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(example = "public-key", description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public InlineResponse200AttestationPayloadExcludeCredentials transports(List<TransportsEnum> transports) {
    this.transports = transports;
    return this;
  }

  public InlineResponse200AttestationPayloadExcludeCredentials addTransportsItem(TransportsEnum transportsItem) {
    if (this.transports == null) {
      this.transports = new ArrayList<TransportsEnum>();
    }
    this.transports.add(transportsItem);
    return this;
  }

   /**
   * Get transports
   * @return transports
  **/
  @Schema(description = "")
  public List<TransportsEnum> getTransports() {
    return transports;
  }

  public void setTransports(List<TransportsEnum> transports) {
    this.transports = transports;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse200AttestationPayloadExcludeCredentials inlineResponse200AttestationPayloadExcludeCredentials = (InlineResponse200AttestationPayloadExcludeCredentials) o;
    return Objects.equals(this.id, inlineResponse200AttestationPayloadExcludeCredentials.id) &&
        Objects.equals(this.type, inlineResponse200AttestationPayloadExcludeCredentials.type) &&
        Objects.equals(this.transports, inlineResponse200AttestationPayloadExcludeCredentials.transports);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, transports);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse200AttestationPayloadExcludeCredentials {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    transports: ").append(toIndentedString(transports)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
